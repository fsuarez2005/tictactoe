/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.franksuarez.tictactoe.ui;

import java.awt.event.ActionEvent;
import javax.swing.event.ChangeEvent;

/**
 *
 * @author franksuarez
 */
public class ImageComponentDemo extends javax.swing.JFrame {

    /**
     * Creates new form AWTComponentTest
     */
    public ImageComponentDemo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlImage = new javax.swing.JPanel();
        imgCpt = new com.franksuarez.tictactoe.beans.ImageComponent();
        jSliderHorizontal = new javax.swing.JSlider();
        jSliderVertical = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ImageComponent Demo");

        jPnlImage.setLayout(null);

        imgCpt.setFilePath("goku.png");
        jPnlImage.add(imgCpt);
        imgCpt.setBounds(0, 0, 500, 500);

        jSliderHorizontal.setMajorTickSpacing(10);
        jSliderHorizontal.setMaximum(250);
        jSliderHorizontal.setMinimum(-250);
        jSliderHorizontal.setPaintTicks(true);
        jSliderHorizontal.setToolTipText("Horizontal");
        jSliderHorizontal.setValue(0);
        jSliderHorizontal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderHorizontalStateChanged(evt);
            }
        });

        jSliderVertical.setMajorTickSpacing(10);
        jSliderVertical.setMaximum(250);
        jSliderVertical.setMinimum(-250);
        jSliderVertical.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderVertical.setPaintTicks(true);
        jSliderVertical.setToolTipText("Vertical");
        jSliderVertical.setValue(0);
        jSliderVertical.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderVerticalStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPnlImage, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderVertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSliderHorizontal, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSliderVertical, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPnlImage, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderHorizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSliderVerticalStateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSliderVerticalStateChanged
        this.imgCpt.setOffsetY(-jSliderVertical.getValue());
    }//GEN-LAST:event_jSliderVerticalStateChanged

    private void jSliderHorizontalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderHorizontalStateChanged
        imgCpt.setOffsetX(jSliderHorizontal.getValue());
    }//GEN-LAST:event_jSliderHorizontalStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageComponentDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageComponentDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageComponentDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageComponentDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImageComponentDemo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.franksuarez.tictactoe.beans.ImageComponent imgCpt;
    private javax.swing.JPanel jPnlImage;
    private javax.swing.JSlider jSliderHorizontal;
    private javax.swing.JSlider jSliderVertical;
    // End of variables declaration//GEN-END:variables
}
